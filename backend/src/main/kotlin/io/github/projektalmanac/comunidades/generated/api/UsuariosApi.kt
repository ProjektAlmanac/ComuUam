/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.0.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
*/
package io.github.projektalmanac.comunidades.generated.api

import io.github.projektalmanac.comunidades.generated.dto.CreacionUsuarioDto
import io.github.projektalmanac.comunidades.generated.dto.IdUsuarioDto
import io.github.projektalmanac.comunidades.generated.dto.UsuarioCreadoDto
import io.swagger.v3.oas.annotations.*
import io.swagger.v3.oas.annotations.enums.*
import io.swagger.v3.oas.annotations.media.*
import io.swagger.v3.oas.annotations.responses.*
import io.swagger.v3.oas.annotations.security.*
import org.springframework.http.HttpStatus
import org.springframework.http.MediaType
import org.springframework.http.ResponseEntity

import org.springframework.web.bind.annotation.*
import org.springframework.validation.annotation.Validated
import org.springframework.web.context.request.NativeWebRequest
import org.springframework.beans.factory.annotation.Autowired

import javax.validation.constraints.DecimalMax
import javax.validation.constraints.DecimalMin
import javax.validation.constraints.Email
import javax.validation.constraints.Max
import javax.validation.constraints.Min
import javax.validation.constraints.NotNull
import javax.validation.constraints.Pattern
import javax.validation.constraints.Size
import javax.validation.Valid

import kotlin.collections.List
import kotlin.collections.Map

@Validated
@RequestMapping("\${api.base-path:}")
interface UsuariosApi {

    @Operation(
        summary = "Crear un nuevo usuario",
        operationId = "crearUsuario",
        description = """Crea un nuevo usuario""",
        responses = [
            ApiResponse(responseCode = "201", description = "Created", content = [Content(schema = Schema(implementation = UsuarioCreadoDto::class))])
        ]
    )
    @RequestMapping(
            method = [RequestMethod.POST],
            value = ["/api/usuarios"],
            produces = ["application/json"],
            consumes = ["application/json"]
    )
    fun crearUsuario(@Parameter(description = "") @Valid @RequestBody(required = false) creacionUsuarioDto: CreacionUsuarioDto?): ResponseEntity<UsuarioCreadoDto>

    @Operation(
        summary = "Recuperar ID",
        operationId = "getId",
        description = """Recupera el ID del usuario basado en la informaci√≥n de su JWT""",
        responses = [
            ApiResponse(responseCode = "200", description = "OK", content = [Content(schema = Schema(implementation = IdUsuarioDto::class))])
        ]
    )
    @RequestMapping(
            method = [RequestMethod.GET],
            value = ["/api/usuarios/id"],
            produces = ["application/json"]
    )
    fun getId(): ResponseEntity<IdUsuarioDto>
}
